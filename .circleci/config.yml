version: 2.1

jobs:
  
  build-pushDocker:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            apk add --no-cache git make bash wget python3-dev build-base
            curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-17.04.0-ce.tgz \
                && tar xzvf docker-17.04.0-ce.tgz \
                && mv docker/docker /usr/local/bin \
                && rm -r docker docker-17.04.0-ce.tgz
      - run:
          name: lint code 
          command: |
            make setup
            source ~/.devops/bin/activate
            pip install --upgrade pip
            pip install typed_ast
            pip install pylint
            make install
            make lint
      - run:
          name: build docker and push it
          command: |
            docker build --tag=capstone .
            ./upload_docker.sh

  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --tags project=circleci-${CIRCLE_WORKFLOW_ID:0:7} \
               --stack-name "backendstack-${CIRCLE_WORKFLOW_ID:0:7}" \
               --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}" 
      - run:
          name: Add back-end ip text file
          command: |
            EIP=$(aws cloudformation \
              list-exports --query "Exports[?Name==\`EIP-${CIRCLE_WORKFLOW_ID:0:7}\`].Value" \
              --no-paginate --output text)
            echo $EIP
            echo $EIP >> .circleci/ansible/backendIP.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/backendIP.txt
            
workflows:
  default:
    jobs:
      - build-pushDocker:
          context: udapeople
      - deploy-infrastructure:
          context: udapeople
          requires: [build-pushDocker]